const AdmZip = require('adm-zip');
const fs = require('fs');

function bruteForceDecrypt(zipPath, passwordLength, charset, callback) {
    fs.readFile(zipPath, async (err, data) => {
        if (err) {
            console.error(err);
            return;
        }

        const zip = new AdmZip(data);

        const generateAllCombinations = (charset, passwordLength) => {
            const combinations = [];

            const generate = (current) => {
                if (current.length === passwordLength) {
                    combinations.push(current);
                    return;
                }
                for (let i = 0; i < charset.length; i++) {
                    generate(current + charset[i]);
                }
            };

            generate('');
            return combinations;
        };

        const passwordCombinations = generateAllCombinations(charset, passwordLength);

        for (const password of passwordCombinations) {
            try {
                await tryPassword(password, zip, callback);
            } catch (e) {
                // Не удалось распаковать с данным паролем
            }
        }
    });
}

function tryPassword(password, zip, callback) {
    return new Promise((resolve, reject) => {
        try {
            // Исправленный путь для распаковки
            zip.extractAllTo('C:/Users/admin/Desktop/Test1/extracted', true, { password: password });
            console.log(`Пароль ${password} найден. Файлы распакованы успешно.`);
            callback(password);
            resolve();
        } catch (e) {
            reject(e);
        }
    });
}

// Пример использования для локальной машины
bruteForceDecrypt('C:/Users/admin/Desktop/Test1/Block.zip', 4, 'abcdefghijklmnopqrstuvwxyz0123456789', (password) => {
    console.log(`Найденный пароль: ${password}`);
});
